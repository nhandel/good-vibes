---
description: This file defines the target user experience (UX) and user interface (UI), including user flows and key interactions. AI agents request this document when implementing or modifying user-facing features to ensure alignment with the intended design.
globs: 
alwaysApply: false
---
<!--
<vibeSpec>
    <purpose>This file defines the target user experience (UX) and user interface (UI), including user stories, user flows, and key interactions. AI agents request this document when implementing or modifying user-facing features to ensure alignment with the intended design and user needs.</purpose>
    <scope>
        *   User Stories & Goals: Clear descriptions of what users want to accomplish and why, connecting features to user needs.
        *   Success Metrics: Measurable criteria that indicate the design is meeting user needs effectively.
        *   User Flows & Journeys: Detailed descriptions of user navigation for specific goals (e.g., "User Registration Flow," "Product Purchase Journey").
        *   UI Layout & Structure: Descriptions or textual wireframes of screens/pages/components, including element placement and navigation patterns.
        *   Key Interactions: Specifics of UI element interactions (e.g., button clicks, drag-and-drop results).
        *   Visual Elements (Descriptive): Descriptions of styling, branding, and overall aesthetic (unless a separate style guide covers this). Example: "Buttons should have rounded corners and a primary blue background."
        *   Accessibility Considerations: Notes on supporting users with disabilities (e.g., alt text requirements, keyboard navigation support).
        *   Design Boundaries: Clear statements about what is intentionally out of scope for the design.
        *   Open Design Questions: Documentation of unresolved design issues that need further investigation.
    </scope>
    <nonScope>
        *   Code implementation details (e.g., specific HTML tags or CSS classes).
        *   Specific front-end framework/library choices (these belong in `tech-stack.mdc`).
        *   Database schema or backend API endpoint definitions (these belong in `architecture.mdc`).
    </nonScope>
    <usageNotes>Initial draft generated via `prompt-0-context-setup.md` based on project idea/requirements. Requires thorough human review and refinement before coding. Can be updated via `prompt-5-update-context-doc.md` if UX/UI requirements change significantly. AI Agents should request this when needing to understand user-facing aspects or implement UI changes.</usageNotes>
</vibeSpec>
-->

# Project Design Document: [Your Project Name]

## 1. Overview

<!-- Provide a high-level summary of the project's purpose from the user's perspective. What problem does it solve? Who is the target audience? -->
**Instructions:** Describe the overall user-facing goal and target users here. Focus on the problem being solved rather than the implementation details.

### Key Questions to Answer:
- What specific user problem or need does this project address?
- Who are the primary and secondary user groups?
- What is the core value proposition for these users?

## 2. User Stories and Goals

<!-- Define clear user stories that capture what users want to accomplish and why -->
**Instructions:** Write user stories in the format "As a [type of user], I want to [perform an action] so that [benefit]." These stories help connect features to user needs.

### Example User Stories:

* As a new user, I want to create an account quickly so that I can start using the application without delay.
* As a returning user, I want to easily find my saved content so that I can continue where I left off.
* As a mobile user, I want to access core features on my phone so that I can use the application on the go.

### Success Metrics

<!-- Define how you'll measure the success of the design from a user perspective -->
**Instructions:** List specific, measurable criteria that indicate the design is successful.

* Example: 80% of users should complete the registration process on first attempt
* Example: Average time to complete [key task] should be under 30 seconds
* Example: User satisfaction rating for [feature] should exceed 4.5/5

## 3. User Flows

<!-- Detail the key journeys a user will take through the application. Use flowcharts or numbered steps. -->
**Instructions:** Map out the primary user interactions and sequences. Focus on the critical paths that users will take to accomplish their goals.

### Example User Flow: [Feature Name, e.g., User Registration]

1.  User navigates to the `/register` page.
2.  User fills in the registration form (fields: [list fields]).
3.  User clicks the "Submit" button.
4.  System validates input.
    *   On success: Redirects to `/dashboard`, displays welcome message.
    *   On failure: Reloads `/register` page, highlights errors, displays error messages.
5.  <!-- Add more steps as needed -->

<!-- Add other key user flows below -->

## 3. UI Layouts & Key Screens

<!-- Describe the layout and components of major screens or views. Wireframes or mockups can be linked or embedded here, but descriptions are essential. -->
**Instructions:** Detail the structure and elements of important user interfaces.

### Example Screen: [Screen Name, e.g., Dashboard]

*   **Layout:** Two-column layout. Left sidebar for navigation, main content area on the right.
*   **Navigation (Sidebar):**
    *   Link to "Profile"
    *   Link to "Settings"
    *   Link to "[Feature X]"
    *   <!-- Add other navigation items -->
*   **Main Content Area:**
    *   Welcome message: "Welcome, [User Name]!"
    *   Section for "[Key Data Display]"
    *   Button for "[Primary Action]"
    *   <!-- Detail other components and their placement -->

<!-- Add descriptions for other key screens -->

## 4. Key Interactions & Visual Elements

<!-- Specify important micro-interactions, animations, branding elements (colors, fonts, logos), and accessibility considerations. -->
**Instructions:** Define specific interactive behaviors and visual style guides.

*   **Button Hover Effect:** Buttons should [describe hover effect, e.g., slightly lighten].
*   **Loading Indicator:** Use [describe indicator, e.g., a spinning icon] during data fetches.
*   **Color Palette:**
    *   Primary: `#XXXXXX`
    *   Secondary: `#XXXXXX`
    *   Accent: `#XXXXXX`
*   **Typography:**
    *   Headings: [Font Name], [Size]
    *   Body Text: [Font Name], [Size]
*   **Accessibility:** Ensure sufficient color contrast and keyboard navigation support.
*   <!-- Add other interaction/visual details -->

## 5. Non-Functional Requirements (UX-Related)

<!-- List any non-functional requirements directly impacting the user experience, e.g., performance expectations, responsiveness targets. -->
**Instructions:** Specify performance or responsiveness goals affecting the UX.

*   Page load times for key screens should be under [Time, e.g., 2 seconds].
*   The application must be responsive and usable on screen widths down to [Width, e.g., 320px].
*   [Add other relevant non-functional requirements]

## 6. Design Boundaries (Non-Goals)

<!-- Explicitly state what is out of scope for the design to prevent feature creep -->
**Instructions:** Clearly define what the design will NOT include or address. This helps maintain focus and set expectations.

* Example: This design does NOT include an admin dashboard (will be designed separately)
* Example: We will NOT support Internet Explorer 11 or older browsers
* Example: The initial version will NOT include [specific feature] functionality

## 7. Open Design Questions

<!-- Document unresolved design issues that need further investigation -->
**Instructions:** List any design decisions that remain unresolved, require stakeholder input, or need user research to validate.

* Example: Should users be able to [specific action], or is that better handled through [alternative approach]?
* Example: We need to validate whether users prefer [option A] or [option B] for the navigation structure
* Example: How will the design accommodate [edge case or specific user need]?