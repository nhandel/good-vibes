---
description: 
globs: 
alwaysApply: true
---
# --- AI Core Operating Instructions ---
# These rules are ALWAYS in context. Adhere to them.
# For detailed workflow, document purposes, and prompt usage, consult `.cursor/rules/vibe-coding.mdc`.

# --- I. General Conduct ---

- rule: Understand Workflow
  trigger: always
  instruction: |
    Your primary role is to execute tasks based on prompts and plans. The overall Vibe Coding Workflow is detailed in `.cursor/rules/vibe-coding.mdc`. If unsure about the *process*, refer to it.

- rule: Prioritize Clarity: Ask Questions
  trigger: always
  instruction: |
    If any instruction (in plans, prompts, or these rules) is ambiguous, MUST ask for clarification BEFORE coding or modifying files.

- rule: Adhere to Safety & Quality
  trigger: always
  instruction: |
    Refuse or clarify if an instruction implies: introducing TODOs without a plan, insecure code, skipping tests (esp. Step 0), or deviating from `tech-stack.mdc` / `architecture.mdc` without explicit direction.

# --- II. Implementation Plans (`.cursor/rules/implementation-plan-[feature-name].mdc`) ---

- rule: Plan Instructions are Paramount
  trigger: always
  instruction: |
    When an implementation plan is active, its current step's instructions take precedence.

- rule: Mandatory Plan Structure (Key Points)
  trigger: always
  instruction: |
    Implementation plans (see `prompt-1-generate-implementation-plan.md` for full generation details) MUST:
    1. Start with `Step 0: Test Scaffold`.
    2. End with `Step n: Clean Up and Testing` (includes code polish, standards adherence, full test pass).
    Detailed structure for these steps is in `prompt-1` and `vibe-coding.mdc`.
 
- rule: Execute One Step Only
  trigger: always
  instruction: |
    Via `prompt-2-implement-plan.md` or `prompt-3-continue-plan.md`, execute ONLY the single designated plan step. No look-ahead.

- rule: Consider Plan Risks
  trigger: always
  instruction: |
    Always review the "Risks" for the current plan step.

- rule: No Unplanned Code Changes
  trigger: always
  instruction: |
    DO NOT make changes not explicitly outlined in the current, active plan step.

# --- III. Standardized Prompts (`.cursor/prompts/`) ---

- rule: Follow Active Prompt Precisely
  trigger: always
  instruction: |
    Workflow actions are orchestrated by prompts in `.cursor/prompts/`. Follow the active prompt's instructions. The `vibe-coding.mdc` details which prompt to use for each workflow stage.

- rule: Step Execution Process (via Prompt-2 & Prompt-3)
  trigger: always
  instruction: |
    When using `prompt-2-implement-plan.md` or `prompt-3-continue-plan.md`, strictly follow the multi-stage execution process detailed *within those prompts*.

- rule: Clarification Handling (via Prompt-3.5)
  trigger: always
  instruction: |
    If user invokes `prompt-3.5-continue-with-clarification.md`, follow its specific instructions for focused fixes.

- rule: Final Review & Archival (via Prompt-4)
  trigger: always
  instruction: |
    When `prompt-4-review-completed-plan.md` is active, follow its instructions to finalize, report on, and archive the plan.

# --- IV. Context Documents (`.cursor/rules/` & `.cursor/rules/style-guides/`) ---

- rule: Consult Core Context Before Coding
  trigger: always
  instruction: |
    Before coding for a plan step or generating a new plan (`prompt-1`), ensure you've reviewed:
    - `.cursor/rules/architecture.mdc` (system structure)
    - `.cursor/rules/tech-stack.mdc` (approved technologies)
    - `.cursor/rules/design.mdc` (UX/UI specs)
    - Relevant style guides in `.cursor/rules/style-guides/` (coding standards)
    (See `vibe-coding.mdc` for document content details).

- rule: Update Core Documents When Instructed
  trigger: always
  instruction: |
    Update `architecture.mdc`, `tech-stack.mdc`, `design.mdc` ONLY when instructed by:
    1. An implementation plan step (via `prompt-2` or `prompt-3`).
    2. The final review process (`prompt-4-review-completed-plan.md`).
    3. `prompt-0-update-context-doc.md`.
    Integrate changes clearly, maintaining document format.

- rule: Adhere to Style Guides (Especially Final Step)
  trigger: always
  instruction: |
    During `Step n: Clean Up and Testing` (detailed in `prompt-1-generate-implementation-plan.md`) and when modifying code, ensure strict adherence to relevant guides in `.cursor/rules/style-guides/`.

# --- V. Version Control (Guideline) ---
- rule: Git Commit Hygiene
  trigger: manual # User driven, this is the recommended standard.
  instruction: |
    Commit after each validated plan step. Format:
    "[Plan <feature-name> - Step <step-number>] <Concise summary>"
    Example: "[Plan user-auth - Step 3] Implement JWT validation"
